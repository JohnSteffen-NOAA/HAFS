#!/bin/sh

set -xe

date
source ${USHhafs}/hafs_pre_job.sh.inc
HOLDVARS=${HOLDVARS:-/can/not/find/storm1.holdvars.txt}
source ${HOLDVARS}

export EXPT=${EXPT:-HAFS}
export SUBEXPT=${SUBEXPT:-${EXPT}}

export CDATE=${CDATE:-${YMDH}}
export cyc=${cyc:-00}
export STORM=${STORM:-FAKE}
export STORMID=${STORMID:-00L}

export NHRS=${NHRS:-126}
export NBDYHRS=${NBDYHRS:-3}
export ENSDA=${ENSDA:-NO}
if [ ${ENSDA} = YES ]; then
  export CASE=${CASE_ENS:-C768}
  export CRES=`echo $CASE | cut -c 2-`
  export gtype=${gtype_ens:-regional}             # grid type = uniform, stretch, nest, or stand alone regional
# If gridfixdir is specified and exists, use the grid fix files directly
  export gridfixdir=${gridfixdir_ens:-'/let/hafs_grid/generate/grid_ens'}
  export LEVS=${LEVS_ENS:-65}
  export istart_nest=${istart_nest_ens:-46}
  export jstart_nest=${jstart_nest_ens:-238}
  export iend_nest=${iend_nest_ens:-1485}
  export jend_nest=${jend_nest_ens:-1287}
# Otherwise, generate grid according to the following parameters
  export stretch_fac=${stretch_fac_ens:-1.0001}     # stretching factor for the grid
  export target_lon=${target_lon_ens:--62.0}      # center longitude of the highest resolution tile
  export target_lat=${target_lat_ens:-22.0}       # center latitude of the highest resolution tile
# Need for grid types: nest and regional
  export refine_ratio=${refine_ratio_ens:-4}      # specify the refinement ratio for nest grid
else
  export CASE=${CASE:-C768}
  export CRES=`echo $CASE | cut -c 2-`
  export gtype=${gtype:-regional}             # grid type = uniform, stretch, nest, or stand alone regional
# If gridfixdir is specified and exists, use the grid fix files directly
  export gridfixdir=${gridfixdir:-'/let/hafs_grid/generate/grid'}
  export LEVS=${LEVS:-65}
  export istart_nest=${istart_nest:-46}
  export jstart_nest=${jstart_nest:-238}
  export iend_nest=${iend_nest:-1485}
  export jend_nest=${jend_nest:-1287}
# Otherwise, generate grid according to the following parameters
  export stretch_fac=${stretch_fac:-1.0001}     # stretching factor for the grid
  export target_lon=${target_lon:--62.0}      # center longitude of the highest resolution tile
  export target_lat=${target_lat:-22.0}       # center latitude of the highest resolution tile
# Need for grid types: nest and regional
  export refine_ratio=${refine_ratio:-4}      # specify the refinement ratio for nest grid
fi

export halo=${halo:-3}                      # halo size to be used in the atmosphere cubic sphere model for the grid tile.
export halop1=${halop1:-4}                  # halo size that will be used for the orography and grid tile in chgres
export halo0=${halo0:-0}                    # no halo, used to shave the filtered orography for use in the model
export NTRAC=7            # output all gfdl mp tracers

####################################
# Specify Execution Areas
####################################
export HOMEhafs=${HOMEhafs:-/gpfs/hps3/emc/hwrf/noscrub/${USER}/save/HAFS}
export WORKhafs=${WORKhafs:-/gpfs/hps3/ptmp/${USER}/${SUBEXPT}/${CDATE}/${STORMID}}
export COMIN=${COMIN:-/gpfs/hps3/ptmp/${USER}/${SUBEXPT}/com/${CDATE}/${STORMID}}
export COMOUT=${COMOUT:-/gpfs/hps3/ptmp/${USER}/${SUBEXPT}/com/${CDATE}/${STORMID}}
export COMhafs=${COMhafs:-${COMOUT}}
export USHhafs=${USHhafs:-${HOMEhafs}/ush}
export PARMhafs=${PARMhafs:-${HOMEhafs}/parm}
export EXEChafs=${EXEChafs:-${HOMEhafs}/exec}
export FIXhafs=${FIXhafs:-${HOMEhafs}/fix}

export FIXam=${FIXhafs}/fix_am
export FIXorog=${FIXhafs}/fix_orog
export FIXfv3=${FIXhafs}/fix_fv3
export FIXsfc_climo=${FIXhafs}/fix_sfc_climo

export MAKEHGRIDEXEC=${EXEChafs}/hafs_make_hgrid.x
export MAKEMOSAICEXEC=${EXEChafs}/hafs_make_solo_mosaic.x
export FILTERTOPOEXEC=${EXEChafs}/hafs_filter_topo.x
export FREGRIDEXEC=${EXEChafs}/hafs_fregrid.x
export OROGEXEC=${EXEChafs}/hafs_orog.x
export SHAVEEXEC=${EXEChafs}/hafs_shave.x
export SFCCLIMOEXEC=${EXEChafs}/hafs_sfc_climo_gen.x

export MAKEGRIDSSH=${USHhafs}/hafs_make_grid.sh
export MAKEOROGSSH=${USHhafs}/hafs_make_orog.sh
export FILTERTOPOSSH=${USHhafs}/hafs_filter_topo.sh

####################################
# Load Modules if Needed
####################################
export machine=${WHERE_AM_I:-wcoss_cray} # platforms: wcoss_cray, wcoss_dell_p3, hera, orion, jet
#export RUN_ENVIR=${RUN_ENVIR:-prod}
export RUN_ENVIR=${envir:-prod}
if [ "$RUN_ENVIR" = prod ]; then
  if [ "$machine" = wcoss_dell_p3 ]; then
    module unload NetCDF
    module unload HDF5-serial
  fi
  module use ${HOMEhafs}/sorc/hafs_utils.fd/modulefiles
  module load build.${machine}.intel
  module list
  env
fi

#####################################
# Set up job node/core/run environment variables
#####################################
source ${USHhafs}/hafs_runcmd.sh.inc

####################################
# Run setpdy and initialize PDY variables
####################################
#setpdy.sh
#. ./PDY

PDYtmp=$(echo ${YMDH} | cut -c 1-8 )
export PDY=${PDY:-${PDYtmp}}

#####################################
# Working directories
#####################################
if [ ${ENSDA} = YES ]; then
  export OUTDIR=${OUTDIR:-${WORKhafs}/intercom/grid_ens/${CASE}}
  export DATA=${WORKhafs}/grid_ens
else
  export OUTDIR=${OUTDIR:-${WORKhafs}/intercom/grid/${CASE}}
  export DATA=${WORKhafs}/grid
fi

export SCRUBDATA=${SCRUBDATA:-YES}

if [ "${SCRUBDATA}" = YES ]; then
  rm -rf $DATA
fi

mkdir -p $OUTDIR $DATA
cd $DATA

#####################################
# Execute the script.
${HOMEhafs}/scripts/exhafs_grid.sh
export err=$?
#####################################

exit $err
